DT = data.table( a=sample(1:1000,n,replace=TRUE),
b=sample(1:1000,n,replace=TRUE),
c=rnorm(n),
d=sample(c("foo","bar","baz","qux","quux"),n,replace=TRUE),
e=rnorm(n),
f=sample(1:1000,n,replace=TRUE) )
DT[2,b:=NA_integer_]
DT[4,c:=NA_real_]
DT[3,d:=NA_character_]
DT[5,d:=""]
DT[2,e:=+Inf]
DT[3,e:=-Inf]
sapply(DT,class)
T = data.table( a=sample(1:1000,n,replace=TRUE),
b=sample(1:1000,n,replace=TRUE),
c=rnorm(n),
d=sample(c("foo","bar","baz","qux","quux"),n,replace=TRUE),
e=rnorm(n),
f=sample(1:1000,n,replace=TRUE) )
sapply(DT,class)
DT = data.table( a=sample(1:1000,n,replace=TRUE),
b=sample(1:1000,n,replace=TRUE),
c=rnorm(n),
d=sample(c("foo","bar","baz","qux","quux"),n,replace=TRUE),
e=rnorm(n),
f=sample(1:1000,n,replace=TRUE) )
DT
sapply(DT,class)
DT[2,b:=NA_integer_]
sapply(DT,class)
DT[5,d:=""]
training <- fread("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv",
sep=',',na.strings=c("NA"," ","#DIV/0!"), verbose=TRUE)
training$V1<- as.numeric(training$V1)
str(training)
training <- fread("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv",
sep=',',na.strings=c("NA"," ","#DIV/0!"), verbose=TRUE)
testing  <- fread("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv",
sep=',',na.strings=c('NA','','#DIV/0!'))
dim(training)
dim(testing)
str(training)
cols = paste("V", c(1,2,3,5), sep="")
cols
summary(training)
training[,!vars_keep,with=F]
vars_keep <- c('user_name','cvtd_timestamp','classe')
training[,!vars_keep,with=F]
training[,lapply(.SD,as.numeric),by='user_name,cvtd_timestamp,classe,new_window']
training <- fread("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv",
sep=',',na.strings=c("NA"," ","#DIV/0!"), verbose=TRUE)
training[,lapply(.SD,as.numeric),by='user_name,cvtd_timestamp,classe,new_window']
newTraining <-training[,lapply(.SD,as.numeric),by='user_name,cvtd_timestamp,classe,new_window']
dim(newTraining)
str(newTraining)
strptime(newTraining$cvtd_timestamp,'%d/%m/%y %H:%M)
)
''
)
)
strptime(newTraining$cvtd_timestamp,'%d/%m/%y %H:%M')
newTraining$cvtd_timestamp
strptime(newTraining$cvtd_timestamp,'%d/%m/%Y %H:%M')
newTraining[,cvtd_timestamp :=strptime(cvtd_timestamp,'%d/%m/%Y %H:%M')]
newTraining <-training[,lapply(.SD,as.numeric),by='user_name,cvtd_timestamp,classe,new_window']
newTraining$cvtd_timestamp <- strptime(newTraining$cvtd_timestamp,'%d/%m/%Y %H:%M')
training <- fread("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv",
sep=',',na.strings=c("NA"," ","#DIV/0!"), verbose=TRUE)
testing  <- fread("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv",
sep=',',na.strings=c('NA','','#DIV/0!'))
newTraining <-training[,lapply(.SD,as.numeric),by='user_name,cvtd_timestamp,classe,new_window']
newTraining$cvtd_timestamp <- strptime(newTraining$cvtd_timestamp,'%d/%m/%Y %H:%M')
newTraining[,cvtd_timestamp :=strptime(cvtd_timestamp,'%d/%m/%Y %H:%M'),by=V1]
newTraining <-training[,lapply(.SD,as.numeric),by='user_name,cvtd_timestamp,classe,new_window']
newTesting <-testing[,lapply(.SD,as.numeric),by='user_name,cvtd_timestamp,classe,new_window']
dim(testing)
head(testing)
str(testing)
summary(testing)
head(testing)
newTraining <-training[,lapply(.SD,as.numeric),by='user_name,cvtd_timestamp,classe,new_window']
newTesting <-testing[,lapply(.SD,as.numeric),by='user_name,cvtd_timestamp,new_window']
training[,lapply(.SD,as.numeric),by='user_name,cvtd_timestamp,classe,new_window']
str(training)
str(newTraining)
str(training)
str(testing)
training <-training[,lapply(.SD,as.numeric),by='user_name,cvtd_timestamp,classe,new_window']
testing <-testing[,lapply(.SD,as.numeric),by='user_name,cvtd_timestamp,new_window']
str(training)
nzv <- nearZeroVar(training)
filteredTraining <- training[,(nzv):=NULL]
filteredTesting <- testing[,(nzv) :=NULL]
dim(filteredTraining)
dim(filteredTesting)
cor(filteredTraining)
str(filteredTraining)
cor(filteredTraining[,!1:3,with=F])
table(training$user_name,training$classe)
training <- fread("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv",
sep=',',na.strings=c("NA"," ","#DIV/0!"), verbose=TRUE)
testing  <- fread("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv",
sep=',',na.strings=c('NA','','#DIV/0!'))
drops <- c('V1','user_name','cvtd_timestamp')
training[,(drops):=NULL]
testing[,(drops):=NULL]
str(training)
training <-training[,lapply(.SD,as.numeric),by='classe,new_window']
testing <-testing[,lapply(.SD,as.numeric),by='new_window']
str(training)
nzv <- nearZeroVar(training)
filteredTraining <- training[,(nzv):=NULL]
filteredTesting <- testing[,(nzv) :=NULL]
dim(filteredTraining)
dim(filteredTesting)
str(filteredTraining)
cor(filteredTraining[,!1,with=F])
varCor <-cor(filteredTraining[,!1,with=F])
summary(varCor[upper.tri(varCor)])
training <- fread("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv",
sep=',',na.strings=c("NA"," ","#DIV/0!"), verbose=TRUE)
testing  <- fread("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv",
sep=',',na.strings=c('NA','','#DIV/0!'))
head(training)
tail(training)
download.file('https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv',destfile='pml_training.csv')
training <- read.csv('pml_training.csv')
str(training)
download.file('https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv',destfile='pml_training.csv')
download.file('https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv',destfile='pml_testing.csv')
training <- read.csv('pml_training.csv')
testing <- read.csv('pml_testing.csv')
?read.csv
training <- read.csv('pml_training.csv',na.strings=c("NA"," ","#DIV/0!"))
str(training)
download.file('https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv',destfile='pml_training.csv')
download.file('https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv',destfile='pml_testing.csv')
training <- read.csv('pml_training.csv',na.strings=c("NA"," ","#DIV/0!"))
testing <- read.csv('pml_testing.csv',na.strings=c("NA"," ","#DIV/0!"))
str(training)
unique(training$kurtosis_yaw_belt)
table(training$kurtosis_yaw_belt)
table(training$user_name,training$kurtosis_yaw_belt)
head(training)
summary(training)
nzv <- nearZeroVar(training)
filteredTraining <- training[,-nzv]
filteredTesting <- testing[,-nzv]
dim(filteredTraining)
str(filteredTraining)
summary(filteredTraining)
head(filteredTraining)
tail(filteredTraining)
table(filteredTraining$kurtosis_roll_arm)
>nearZeroVar
?nearZeroVar
table(filteredTraining$kurtosis_roll_arm)
training <- read.csv('pml_training.csv',na.strings=c("NA"," ","#DIV/0!"),colClasses='character')
str(training)
training <- read.csv('pml_training.csv',na.strings=c("NA","","#DIV/0!"),colClasses='character')
str(training)
nzv <- nearZeroVar(training)
filteredTraining <- training[,-nzv]
dim(filteredTraining)
summary(filteredTraining)
download.file('https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv',destfile='pml_training.csv')
download.file('https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv',destfile='pml_testing.csv')
training <- read.csv('pml_training.csv',na.strings=c("NA","","#DIV/0!"))
testing <- read.csv('pml_testing.csv',na.strings=c("NA"," ","#DIV/0!"))
str(training)
nzv <- nearZeroVar(training)
filteredTraining <- training[,-nzv]
dim(filteredTraining)
tail(filteredTraining)
summary(filteredTraining)
train.imputed <- preProcess(training, method = c("knnImpute"))
summary(training)
length(unique( cvtd_timestamp))
length(unique( training$cvtd_timestamp))
length(unique( training$ raw_timestamp_part_2))
length(unique( training$ raw_timestamp_part_1))
table(training$user_name,training$cvtd_timestamp)
table(training$cvtd_timestamp,training$classe)
head(training)
train.imputed <- preProcess(training, method = c("bagImpute"))
str(training)
table(training$num_window,training$classe)
table(training$user_name,training$num_window)
summary(training)
char_vars<- c('user_name','cvtd_timestamp','new_window','classe')
train.imputed <- preProcess(training[,!char_vars], method = c("bagImpute"))
training[,!char_vars]
char_vars
training[,!char_vars]
train.imputed <- preProcess(training[,-char_vars], method = c("bagImpute"))
training[,char_vars]
training[,-(char_vars)]
training[,! char_vars]
drops <- c('V1','user_name','cvtd_timestamp')
training[,!drops]
testing[,!drops]
training <- read.csv('pml_training.csv',na.strings=c("NA","","#DIV/0!"))
testing <- read.csv('pml_testing.csv',na.strings=c("NA"," ","#DIV/0!"))
training[,!char_vars]
char_vars<- c('user_name','cvtd_timestamp','new_window','classe')
training[,!char_vars]
download.file('https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv',destfile='pml_training.csv')
download.file('https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv',destfile='pml_testing.csv')
training <- read.csv('pml_training.csv',na.strings=c("NA","","#DIV/0!"))
testing <- read.csv('pml_testing.csv',na.strings=c("NA"," ","#DIV/0!"))
sapply(training,mean)
is.na(traaining$amplitude_pitch_forearm )
is.na(training$amplitude_pitch_forearm )
sum(is.na(training$amplitude_pitch_forearm ))
sapply(training,function(var) sum(is.na(var))
)
class(sapply(training,function(var) sum(is.na(var))))
# char:'user_name','cvtd_timestamp','new_window','classe'
names(sapply(training,function(var) sum(is.na(var))))
var.nas <- sapply(training,function(var) sum(is.na(var)))
var.nas
dim(training)
19622 *5%
19622 * 0.05
19622 * 0.95
var.nas > 19622 * 0.95
rm.vars <- var.nas > 19622 * 0.95
rm.vars
class(rm.vars)
rm.vars <- var.nas[ar.nas > 19622 * 0.95]
rm.vars <- var.nas[var.nas > 19622 * 0.95]
rm.vars
rm.vars <- names(var.nas[var.nas > 19622 * 0.95])
rm.vars
rm.vars <- var.nas[var.nas > 19622 * 0.95]
newTrain <- training[,!rm.vars]
dim(newTrain)
rm.vars
rm.vars <- names(var.nas[var.nas > 19622 * 0.95])
newTrain <- training[,!rm.vars]
newTrain <- training[,-rm.vars]
newTrain <- training[, !(names(training) %in% rm.vars)]
dim(newTrain)
rm.vars <- var.nas[var.nas > 19622 * 0.95]
newTrain <- training[, !(names(training) %in% rm.vars)]
dim(newTrain)
rm.vars <- names(var.nas[var.nas > 19622 * 0.95])
newTrain <- training[, !(names(training) %in% rm.vars)]
dim(newTrain)
newTest <- testing[, !(names(testing) %in% rm.vars)]
summary(training)
summary(newTrain)
# check whether or not the caret package is installed. If not, install it
if (!is.element('caret', installed.packages()[,1])) {install.packages('caret')}
library(caret)
Train <- training[, !(names(training) %in% rm.vars)]
Test <- testing[, !(names(testing) %in% rm.vars)]
dim(Train)
summary(Train)
var.nas[var.nas > 19622 * 0.95]
dim(training)
var.nas <- sapply(training,function(var) (sum(is.na(var)/19622)))>0.95)
var.nas <- sapply(training,function(var) (sum(is.na(var)/19622))>0.95)
var.nas
var.nas[1]
var.nas[[1]]
var.nas[]
var.nas[[]]
var.nas <- data.frame(sapply(training,function(var) (sum(is.na(var)/19622)) < 0.95))
var.nas
var.nas[2]
var.nas[,2]
dim(vaaar.nas)
dim(var.nas)
Train <- training[, var.nas]
var.nas[1]
Train <- training[, var.nas[1]]
rm.nas <- names(sapply(training,function(var) (sum(is.na(var)/19622)) > 0.95))
rm.nas
Train <- training[, !(names(training) %in% rm.vars]
Train <- training[, !(names(training) %in% rm.vars)]
Test <- testing[, !(names(testing) %in% rm.vars)]
dim(Train)
nzv <- nearZeroVar(Train)
nzv
Train <- Train[,-nzv]
Test <- Test[,-nzv]
dim(Train)
summary(Train)
predicators$user_name <- NULL
drops <- c('V1','user_name','cvtd_timestamp','raw_timestamp_part_1','raw_timestamp_part_2')
Train <- Train[,!(names(Train) %in% drops)]
Test  <- Test[,!(names(Test) %in% drops)]
dim(Train)
summary(Train)
dim(training)
str(training)
dim(Training[1]
dim(Training[1])
dim(training)[1]
rm.nas <- names(sapply(training,function(var) (sum(is.na(var)/dim(training)[1])) > 0.95))
Train <- training[, !(names(training) %in% rm.vars)]
Test <- testing[, !(names(testing) %in% rm.vars)]
dim(Train)
summary(Train)
# remove zero- and near zero variance predicators
nzv <- nearZeroVar(Train)
Train <- Train[,-nzv]
Test <- Test[,-nzv]
# remove unnecessary variables to predictions: record ID--V1, user name, timestamp
drops <- c('V1','user_name','cvtd_timestamp','raw_timestamp_part_1','raw_timestamp_part_2')
drops <- c('X','user_name','cvtd_timestamp','raw_timestamp_part_1','raw_timestamp_part_2')
Train <- Train[,!(names(Train) %in% drops)]
Test  <- Test[,!(names(Test) %in% drops)]
dim(Train)
summary(Train)
varCor <-cor(Train[,-'classe'])
nzv <- nearZeroVar(Train)
Train <- Train[,-nzv]
Test <- Test[,-nzv]
dim(Train)
Train <- training[, !(names(training) %in% rm.vars)]
Test <- testing[, !(names(testing) %in% rm.vars)]
dim(Train)
summary(Train)
nzv <- nearZeroVar(Train)
Train <- Train[,-nzv]
Test <- Test[,-nzv]
dim(Train)
drops <- c('X','user_name','cvtd_timestamp','raw_timestamp_part_1','raw_timestamp_part_2')
Train <- Train[,!(names(Train) %in% drops)]
Test  <- Test[,!(names(Test) %in% drops)]
dim(Train)
nzv <- nearZeroVar(Train)
Train <- Train[,-nzv]
Test <- Test[,-nzv]
dim(Train)
Train <- training[, !(names(training) %in% rm.vars)]
Test <- testing[, !(names(testing) %in% rm.vars)]
dim(Train)
summary(Train)
drops <- c('X','user_name','cvtd_timestamp','raw_timestamp_part_1','raw_timestamp_part_2')
Train <- Train[,!(names(Train) %in% drops)]
Test  <- Test[,!(names(Test) %in% drops)]
nzv <- nearZeroVar(Train)
Train <- Train[,-nzv]
Test <- Test[,-nzv]
dim(Train)
summary(Train)
table(Train$classe,Train$num_window)
sum(Train$num_window)
table(Train$num_window)
head(Train,25)
tail(Train,25)
dim(Train)
varCor <-cor(Train[,-54])
summary(varCor[upper.tri(varCor)])
varCor
?cor
summary(Train)
varCor[upper.tri(varCor)]
hist(varCor[upper.tri(varCor)])
dim(testing)
download.file('https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv',destfile='pml_training.csv')
download.file('https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv',destfile='pml_testing.csv')
training <- read.csv('pml_training.csv',na.strings=c("NA","","#DIV/0!"))
testing <- read.csv('pml_testing.csv',na.strings=c("NA"," ","#DIV/0!"))
# check whether or not the caret package is installed. If not, install it
if (!is.element('caret', installed.packages()[,1])) {install.packages('caret')}
library(caret)
# remove variables with  95% of NAs
rm.nas <- names(sapply(training,function(var) (sum(is.na(var)/dim(training)[1])) > 0.95))
Train <- training[, !(names(training) %in% rm.vars)]
Test <- testing[, !(names(testing) %in% rm.vars)]
dim(Train)
summary(Train)
nzv <- nearZeroVar(Train)
Train <- Train[,-nzv]
Test <- Test[,-nzv]
rm.nas <- names(sapply(training,function(var) (sum(is.na(var)/dim(training)[1])) > 0.95))
Train <- training[, !(names(training) %in% rm.vars)]
rm.vars <- names(sapply(training,function(var) (sum(is.na(var)/dim(training)[1])) > 0.95))
Train <- training[, !(names(training) %in% rm.vars)]
Test <- testing[, !(names(testing) %in% rm.vars)]
dim(Train)
training <- read.csv('pml_training.csv',na.strings=c("NA","","#DIV/0!"))
testing <- read.csv('pml_testing.csv',na.strings=c("NA"," ","#DIV/0!"))
rm.vars <- names(sapply(training,function(var) (sum(is.na(var)/dim(training)[1])) > 0.95))
Train <- training[, !(names(training) %in% rm.vars)]
Test <- testing[, !(names(testing) %in% rm.vars)]
dim(Train)
summary(Train)
dim(training)
dim(testing)
str(training)
dim(training)[1]
sapply(training,function(var) (sum(is.na(var)/dim(training)[1]))
sapply(training,function(var) sum(is.na(var))/dim(training)[1] > 0.95)
sapply(training,function(var) {sum(is.na(var))/dim(training)[1] > 0.95})
names(sapply(training,function(var) {sum(is.na(var))/dim(training)[1] > 0.95}))
Train <- training[, !(names(training) %in% rm.vars)]
Test <- testing[, !(names(testing) %in% rm.vars)]
dim(Train)
sapply(training,function(var) sum(is.na(var))/dim(training)[1])
sapply(training,function(var) sum(is.na(var))/dim(training)[1] >0.95)
sapply(training,function(var) sum(is.na(var))/dim(training)[1] >0.95)==TRUE
class(sapply(training,function(var) sum(is.na(var))/dim(training)[1] >0.95))
highNA <- sapply(training,function(var) sum(is.na(var))/dim(training)[1] >0.95)
highNA
NArate <- sapply(training,function(var) sum(is.na(var))/dim(training)[1] >0.95)
NArate <- [[sapply(training,function(var) sum(is.na(var))/dim(training)[1] >0.95)]]
NArate <- sapply(training,function(var) sum(is.na(var))/dim(training)[1])
NArate
NArate[NArate.0.95]
NArate[NArate>0.95]
NArate[NArate>0.95][1]
'var_pitch_forearm' %in% NArate[NArate>0.95]
NArate[NArate>0.95]
NArate <- sapply(training,function(var) sum(is.na(var))/dim(training)[1])
Train <- training[, !(names(training) %in% names(NArate[NArate >0.95]))]
Test <- testing[, !(names(testing) %in% names(NArate[NArate >0.95]))]
dim(Train)
summary(Train)
nzv <- nearZeroVar(Train)
Train <- Train[,-nzv]
Test <- Test[,-nzv]
dim(Train)
drops <- c('X','user_name','cvtd_timestamp','raw_timestamp_part_1','raw_timestamp_part_2')
Train <- Train[,!(names(Train) %in% drops)]
Test  <- Test[,!(names(Test) %in% drops)]
dim(Train)
summary(Train)
varCor <-cor(Train[,-54])
upper.tri(varCor)
rm.highNA <- names(NArate[NArate >0.95])
rm.highNA
rm.highNA
Train <- training[, !(names(training) %in% rm.highNA )]
Test <- testing[, !(names(testing) %in% rm.highNA)]
dim(Train)
varCor[upper.tri(varCor)]
abs(varCor[upper.tri(varCor)]) > 0.90
sum(abs(varCor[upper.tri(varCor)]) > 0.90)
sum(abs(varCor[upper.tri(varCor)]) > 0.80)
sum(abs(varCor[upper.tri(varCor)]) > 0.75)
sum(abs(varCor[upper.tri(varCor)]) > 0.95)
highlyCorVar <- findCorrelation(varCor,cutoff=0.75)
highlyCorVar
Train <- Train[,-highlyCorVar]
dim(Train)
Test <- Test[,-highlyCorVar]
findLinearCombos(Train)
complete.cases(Train)
sum(complete.cases(Train))
dim(Train)
summary(Train)
plot(Train[,-54])
plot(Train[,-54])
dim(Train)
pairs(Train)
inTrain <- createDataPartition(Train$classe, p=0.7, list=F)
download.file('https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv',destfile='pml_training.csv')
download.file('https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv',destfile='pml_testing.csv')
training <- read.csv('pml_training.csv',na.strings=c("NA","","#DIV/0!"))
testing <- read.csv('pml_testing.csv',na.strings=c("NA"," ","#DIV/0!"))
dim(training)
dim(testing)
str(training)
summary(training)
if (!is.element('caret', installed.packages()[,1])) {install.packages('caret')}
library(caret)
# remove variables with  95% of NAs
NArate <- sapply(training,function(var) sum(is.na(var))/dim(training)[1])
rm.highNA <- names(NArate[NArate >0.95])
Train <- training[, !(names(training) %in% rm.highNA )]
Test <- testing[, !(names(testing) %in% rm.highNA)]
# remove zero- and near zero variance predicators
nzv <- nearZeroVar(Train)
Train <- Train[,-nzv]
Test <- Test[,-nzv]
# remove unnecessary variables to predictions: record identifier-X, user name, timestamp
drops <- c('X','user_name','cvtd_timestamp','raw_timestamp_part_1','raw_timestamp_part_2')
Train <- Train[,!(names(Train) %in% drops)]
Test  <- Test[,!(names(Test) %in% drops)]
# After the above pre-precsessing, the variables are reduced to 54.
# remove highly correlated predicators:
# There are 31 predicators that are higly correlated( absolute correlation coeff >0.75 )
varCor <-cor(Train[,-54]) # the outcome variable 'classe' is the last position
sum(abs(varCor[upper.tri(varCor)]) > 0.75)
highlyCorVar <- findCorrelation(varCor,cutoff=0.75)
Train <- Train[,-highlyCorVar]
Test <- Test[,-highlyCorVar]
dim(Train)
summary(Train)
inTrain <- createDataPartition(Train$classe, p=0.7, list=F)
train <-  Train[inTrain,]
test <-   Train[-inTrain,]
modFit <- train(classe ~., method='rf', data=train)
modFit
pred.train <- predict(modFit,train)
```
modFit$finalModel
pred.train <- predict(modFit,train$classe)
pred.train <- predict(modFit,newdata=train)
table(pred.train,train$classe)
set(../coursera/machinelearning)
setwd(../coursera/machinelearning)
setwd('../coursera/machinelearning')
getwd()
list.files()
setwd('machinelearningassignmnet')
list.files()
